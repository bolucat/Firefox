[break.html]
  expected: ERROR
  [Can set 'break-after' to CSS-wide keywords: ]
    expected: FAIL

  [Can set 'break-after' to var() references: ]
    expected: FAIL

  [Can set 'break-after' to the 'auto' keyword: ]
    expected: FAIL

  [Can set 'break-after' to the 'avoid' keyword: ]
    expected: FAIL

  [Can set 'break-after' to the 'avoid-column' keyword: ]
    expected: FAIL

  [Can set 'break-after' to the 'avoid-page' keyword: ]
    expected: FAIL

  [Can set 'break-after' to the 'avoid-region' keyword: ]
    expected: FAIL

  [Can set 'break-after' to the 'column' keyword: ]
    expected: FAIL

  [Can set 'break-after' to the 'left' keyword: ]
    expected: FAIL

  [Can set 'break-after' to the 'page' keyword: ]
    expected: FAIL

  [Can set 'break-after' to the 'recto' keyword: ]
    expected: FAIL

  [Can set 'break-after' to the 'region' keyword: ]
    expected: FAIL

  [Can set 'break-after' to the 'right' keyword: ]
    expected: FAIL

  [Can set 'break-after' to the 'verso' keyword: ]
    expected: FAIL

  [Setting 'break-after' to a length:  throws TypeError]
    expected: FAIL

  [Setting 'break-after' to a percent:  throws TypeError]
    expected: FAIL

  [Setting 'break-after' to a time:  throws TypeError]
    expected: FAIL

  [Setting 'break-after' to an angle:  throws TypeError]
    expected: FAIL

  [Setting 'break-after' to a flexible length:  throws TypeError]
    expected: FAIL

  [Setting 'break-after' to a number:  throws TypeError]
    expected: FAIL

  [Setting 'break-after' to a transform:  throws TypeError]
    expected: FAIL

  [Can set 'break-before' to CSS-wide keywords: ]
    expected: FAIL

  [Can set 'break-before' to var() references: ]
    expected: FAIL

  [Can set 'break-before' to the 'auto' keyword: ]
    expected: FAIL

  [Can set 'break-before' to the 'avoid' keyword: ]
    expected: FAIL

  [Can set 'break-before' to the 'avoid-column' keyword: ]
    expected: FAIL

  [Can set 'break-before' to the 'avoid-page' keyword: ]
    expected: FAIL

  [Can set 'break-before' to the 'avoid-region' keyword: ]
    expected: FAIL

  [Can set 'break-before' to the 'column' keyword: ]
    expected: FAIL

  [Can set 'break-before' to the 'left' keyword: ]
    expected: FAIL

  [Can set 'break-before' to the 'page' keyword: ]
    expected: FAIL

  [Can set 'break-before' to the 'recto' keyword: ]
    expected: FAIL

  [Can set 'break-before' to the 'region' keyword: ]
    expected: FAIL

  [Can set 'break-before' to the 'right' keyword: ]
    expected: FAIL

  [Can set 'break-before' to the 'verso' keyword: ]
    expected: FAIL

  [Setting 'break-before' to a length:  throws TypeError]
    expected: FAIL

  [Setting 'break-before' to a percent:  throws TypeError]
    expected: FAIL

  [Setting 'break-before' to a time:  throws TypeError]
    expected: FAIL

  [Setting 'break-before' to an angle:  throws TypeError]
    expected: FAIL

  [Setting 'break-before' to a flexible length:  throws TypeError]
    expected: FAIL

  [Setting 'break-before' to a number:  throws TypeError]
    expected: FAIL

  [Setting 'break-before' to a transform:  throws TypeError]
    expected: FAIL

  [Can set 'break-inside' to CSS-wide keywords: ]
    expected: FAIL

  [Can set 'break-inside' to var() references: ]
    expected: FAIL

  [Can set 'break-inside' to the 'auto' keyword: ]
    expected: FAIL

  [Can set 'break-inside' to the 'avoid' keyword: ]
    expected: FAIL

  [Can set 'break-inside' to the 'avoid-column' keyword: ]
    expected: FAIL

  [Can set 'break-inside' to the 'avoid-page' keyword: ]
    expected: FAIL

  [Can set 'break-inside' to the 'avoid-region' keyword: ]
    expected: FAIL

  [Setting 'break-inside' to a length:  throws TypeError]
    expected: FAIL

  [Setting 'break-inside' to a percent:  throws TypeError]
    expected: FAIL

  [Setting 'break-inside' to a time:  throws TypeError]
    expected: FAIL

  [Setting 'break-inside' to an angle:  throws TypeError]
    expected: FAIL

  [Setting 'break-inside' to a flexible length:  throws TypeError]
    expected: FAIL

  [Setting 'break-inside' to a number:  throws TypeError]
    expected: FAIL

  [Setting 'break-inside' to a transform:  throws TypeError]
    expected: FAIL

[mix-blend-mode.html]
  expected: ERROR
  [Can set 'mix-blend-mode' to CSS-wide keywords: ]
    expected: FAIL

  [Can set 'mix-blend-mode' to var() references: ]
    expected: FAIL

  [Can set 'mix-blend-mode' to the 'normal' keyword: ]
    expected: FAIL

  [Can set 'mix-blend-mode' to the 'multiply' keyword: ]
    expected: FAIL

  [Can set 'mix-blend-mode' to the 'screen' keyword: ]
    expected: FAIL

  [Can set 'mix-blend-mode' to the 'overlay' keyword: ]
    expected: FAIL

  [Can set 'mix-blend-mode' to the 'darken' keyword: ]
    expected: FAIL

  [Can set 'mix-blend-mode' to the 'lighten' keyword: ]
    expected: FAIL

  [Can set 'mix-blend-mode' to the 'color-dodge' keyword: ]
    expected: FAIL

  [Can set 'mix-blend-mode' to the 'color-burn' keyword: ]
    expected: FAIL

  [Can set 'mix-blend-mode' to the 'hard-light' keyword: ]
    expected: FAIL

  [Can set 'mix-blend-mode' to the 'soft-light' keyword: ]
    expected: FAIL

  [Can set 'mix-blend-mode' to the 'difference' keyword: ]
    expected: FAIL

  [Can set 'mix-blend-mode' to the 'exclusion' keyword: ]
    expected: FAIL

  [Can set 'mix-blend-mode' to the 'hue' keyword: ]
    expected: FAIL

  [Can set 'mix-blend-mode' to the 'saturation' keyword: ]
    expected: FAIL

  [Can set 'mix-blend-mode' to the 'color' keyword: ]
    expected: FAIL

  [Can set 'mix-blend-mode' to the 'luminosity' keyword: ]
    expected: FAIL

  [Setting 'mix-blend-mode' to a length:  throws TypeError]
    expected: FAIL

  [Setting 'mix-blend-mode' to a percent:  throws TypeError]
    expected: FAIL

  [Setting 'mix-blend-mode' to a time:  throws TypeError]
    expected: FAIL

  [Setting 'mix-blend-mode' to an angle:  throws TypeError]
    expected: FAIL

  [Setting 'mix-blend-mode' to a flexible length:  throws TypeError]
    expected: FAIL

  [Setting 'mix-blend-mode' to a number:  throws TypeError]
    expected: FAIL

  [Setting 'mix-blend-mode' to a transform:  throws TypeError]
    expected: FAIL
